
<!-- fragment shader --><script id="fs" type="x-shader/x-fragment">
    precision mediump float;
    uniform float time;
    uniform vec2  mouse;
    uniform vec2  resolution;
    
    
  vec3 hsv(float h, float s, float v){
    vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));
    return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);
  }
  
  void main(void){
    vec2 m = vec2(mouse.x * 2.0 - 1.0, -mouse.y * 2.0 + 1.0);
    vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);
    
    int j = 0;
    vec2 x = vec2(-0.345, 0.654);
    vec2 y = vec2(time *m.x* 0.005+m.y*0.25, 0.0);
    vec2 z = p;
    for(int i = 0; i < 360; i++){
        j++;
        if(length(z) > 2.0){break;}
        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + x + y;
    }
    
    float h = abs(mod(time * 15.0 - float(j), 360.0) / 360.0);;
    vec3 rgb = hsv(h, 1.0, 1.0);
    gl_FragColor = vec4(rgb, 1.0);
    
  }
    </script><!-- /fragment shader -->
  <!-- vertex shader --><script id="vs" type="x-shader/x-vertex">
    attribute vec3 position;
  
    void main(void){
        gl_Position = vec4(position, 1.0);
    }
    </script><!-- /vertex shader -->
  <script src="../../source/index_GLSLTest.js"></script>
  <body class="container-fluid " >
      <main class=" mx-2 "  data-aos="fade-in">
          <div >
            <div class="p-3 p-sm-5 my-4 rounded theme2 text-center">
              <h1>Shader</h1>
            </div>
          </div>
          
      </main>
        <br>
      <div class="container justify-content-center text-center"  data-aos="fade-in">
  
        <div class="container justify-content-center text-center">
  
          <canvas id="myCanvas"></canvas>
        </div></div>
      <div class ="container pad50"  data-aos="fade-in">
        <p></p>
        <p></p>
        <p>GLSLのテスト</p>
      </div>
    </body>